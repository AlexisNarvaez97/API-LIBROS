

type Book {
    id: Int!
    name: String!
    author: [Author!]!
    author_id: String!
    editorial: String!
    year: String!
    language: String!
    registerDate: String!
}

type Author {
    id: Int!
    name: String
    lastname: String
    email: String!
    registerDate: String!
}

type User {
  id: ID!
  name: String!
  lastname: String!
  email: String!
  password: String!
  registerDate: String!
}

type Subscription {
    changeAuthors: [Author!]!
    changeBooks: [Book!]!
}

input BookInput {
    name: String!
    author_id: String!
    editorial: String!
    year: String!
    language: String!
}

input AuthorInput {
    name: String!
    lastname: String!
    email: String!
}

input UserInput {
  name: String!
  lastname: String!
  email: String!
  password: String!
}

input UpdateInput {
    name: String!
    author_id: String!
    editorial: String!
    year: String!
    language: String!
}

input UpdateAuthInput {
    name: String!
    lastname: String!
}

type ResultBook {
    status: Boolean!
    message: String!
    book: Book
}

type ResultAuthor {
    status: Boolean!
    message: String!
    author: Author
}

type ResultOperation {
    status: Boolean!
    message: String!
    book: Book
}

type ResultUser {
  status: Boolean!
  message: String!
  user: User
}

type ResultToken {
  status: Boolean!
  message: String!
  token: String
}